<?php
/**
 * @file
 * The private_message_messenger.module file.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_theme().
 */
function private_message_messenger_theme($existing, $type, $theme, $path) {
  return [
    'pmm_thread' => [
      'variables' => [
        'fallback_picture' => NULL,
        'inbox_text' => NULL,
      ],
    ],
    'pmm_threads' => [
      'variables' => [
        'fallback_picture' => NULL,
        'new_message_text' => NULL,
      ],
    ]
  ];
}

/**
 *  Implements hook_preprocess_pmm_threads().
 */
function template_preprocess_pmm_threads(&$variables) {
  $variables['#attached']['library'][] = 'private_message_messenger/threads';
  $variables['fallback_picture'] = _private_message_messenger_fallback_picture();
  $variables['new_message_text'] = t('New Message');
}

/**
 *  Implements hook_preprocess_pmm_thread().
 */
function template_preprocess_pmm_thread(&$variables) {
  $variables['#attached']['library'][] = 'private_message_messenger/thread';
  $variables['fallback_picture'] = _private_message_messenger_fallback_picture();
  $variables['inbox_text'] = t('â€¹ Inbox');
}

/**
 * Implements hook_form_private_message_config_form_alter().
 */
function private_message_messenger_form_private_message_config_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $config = \Drupal::service('config.factory')->get('private_message.settings');

  $form['pmm'] = [
    '#type' => 'container',
    'title' => ['#markup' => '<h3>' . t('Messenger') . '</h3>'],
  ];

  // Set a default text format for messages.
  $form['pmm']['preferred_text_format'] = [
    '#type' => 'select',
    '#title' => t('Prefered text format for messages'),
    '#description' => t('You should ensure that users who have access to "use private message" can also access this format.'),
    '#default_value' => $config->get('preferred_text_format'),
    '#options' => [],
  ];
  foreach (filter_formats() as $format) {
    $form['pmm']['preferred_text_format']['#options'][$format->id()] = $format->label();
  }

  // Set a default image style for messages.
  $styles = \Drupal::entityTypeManager()->getStorage('image_style')->loadMultiple();
  $form['pmm']['image_style'] = [
    '#type' => 'select',
    '#title' => t('Profile picture Image style'),
    '#description' => t('What image style is used in the messenger interface'),
    '#default_value' => $config->get('image_style'),
    '#options' => [],
  ];
  foreach ($styles as $style) {
    $form['pmm']['image_style']['#options'][$style->id()] = $style->label();
  }

  $form['#submit'][] = 'private_message_messenger_form_private_message_config_form_submit';
}

/**
 * Submit handler for private message config form.
 */
function private_message_messenger_form_private_message_config_form_submit(&$form, FormStateInterface $form_state) {
  \Drupal::configFactory()->getEditable('private_message.settings')
    ->set('preferred_text_format', $form_state->getValue('preferred_text_format'))
    ->set('image_style', $form_state->getValue('image_style'))
    ->save();
}

/**
 * Get the gallback image.
 *
 * @return string
 */
function _private_message_messenger_fallback_picture() {
  return base_path() . drupal_get_path('module', 'private_message_messenger') . '/images/default-profile.jpg';
}

/**
 * A wrapper to return messenger settings.
 *
 * @return array
 */
function _private_message_messenger_get_settings() {
  $helper = \Drupal::service('private_message_messenger.messenger');
  return $helper->getSettings();
}